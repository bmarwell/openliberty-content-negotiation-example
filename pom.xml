<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
    
  <groupId>de.bmarwell.examples.openlibertycontentrenegotiation</groupId>
  <artifactId>olcr-root</artifactId>
  <packaging>pom</packaging>
  <version>1.0.0-SNAPSHOT</version>
  <name>olcr :: root</name>
    
  <url>https://github.com/bmarwell/openliberty-content-negotiation-example</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>17</maven.compiler.release>
    <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
    <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
    <plugin.forbiddenapis.failOnViolation>true</plugin.forbiddenapis.failOnViolation>

    <!--suppress CheckTagEmptyBody -->
    <surefire.argLine></surefire.argLine>
    <!--suppress CheckTagEmptyBody -->
    <failsafe.argLine></failsafe.argLine>

    <!-- JavaEE and MicroProfile -->
    <dependency.jaxrs.version>2.1.6</dependency.jaxrs.version>
    <dependency.cdi.version>2.0.2</dependency.cdi.version>
    <dependency.json.bind-api.version>1.0</dependency.json.bind-api.version>

    <!-- 3rd party -->
    <dependency.dicerollparser.version>0.2.0</dependency.dicerollparser.version>

    <!-- unit testing -->
    <dependency.junit-jupiter.version>5.8.1</dependency.junit-jupiter.version>
    <dependency.assertj.version>3.21.0</dependency.assertj.version>

    <!-- plugin versions -->
    <kubernetes-maven-plugin.version>1.9.1</kubernetes-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- JavaEE and MicroProfile -->
      <dependency>
        <groupId>jakarta.ws.rs</groupId>
        <artifactId>jakarta.ws.rs-api</artifactId>
        <version>${dependency.jaxrs.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>jakarta.enterprise</groupId>
        <artifactId>jakarta.enterprise.cdi-api</artifactId>
        <version>${dependency.cdi.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <version>4.0.4</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax.json.bind</groupId>
        <artifactId>javax.json.bind-api</artifactId>
        <version>${dependency.json.bind-api.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- 3rd party -->
      <dependency>
        <groupId>dev.diceroll</groupId>
        <artifactId>dice-parser</artifactId>
        <version>${dependency.dicerollparser.version}</version>
      </dependency>

      <!-- unit testing -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${dependency.junit-jupiter.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${dependency.assertj.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>4.0.0</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- forced dependencies -->
  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
          <configuration>
            <compilerArgs>
              <arg>-Xlint:all</arg>
            </compilerArgs>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.3.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.9.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>

        <!-- 3rd party plugins -->
        <plugin>
          <groupId>de.thetaphi</groupId>
          <artifactId>forbiddenapis</artifactId>
          <version>3.2</version>
        </plugin>
        <plugin>
          <groupId>org.eclipse.jkube</groupId>
          <artifactId>kubernetes-maven-plugin</artifactId>
          <version>${kubernetes-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <!-- forced plugin invocation -->
    <plugins>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.2</version>
        <configuration>
          <includes>
            <include>**/*IT.java</include>
            <argLine>${failsafe.argLine}</argLine>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>de.thetaphi</groupId>
        <artifactId>forbiddenapis</artifactId>
        <executions>
          <execution>
            <id>default-check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <failOnViolation>${plugin.forbiddenapis.failOnViolation}</failOnViolation>
              <bundledSignatures>
                <bundledSignature>jdk-unsafe</bundledSignature>
                <bundledSignature>jdk-deprecated</bundledSignature>
                <bundledSignature>jdk-non-portable</bundledSignature>
                <bundledSignature>jdk-reflection</bundledSignature>
                <bundledSignature>jdk-internal</bundledSignature>
                <bundledSignature>jdk-system-out</bundledSignature>
              </bundledSignatures>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <modules>
    <module>web/rest-v1</module>
    <module>integration-tests/openliberty</module>
  </modules>

  <profiles>
    <profile>
      <id>dockerize</id>
      <modules>
        <module>app/openliberty/docker</module>
      </modules>
    </profile>
  </profiles>
</project>
